dmpd:
	name: Distributed MPD
	problem: Multiple machines have distinct music libraries
	project: mpd multiplexer that merges the libraries
	notes:
		- A library is a tree of files.
        - Each leaf in the tree is a track.
        - Node collision is one of 2 cases
			- Equivalent node? Fallback source!
			- Inequivalent node? node-name.lib-name
		- Node equivalence by hash of node content
			- Use a non-crypto composable hash that you can remove/add subhashes quickly

make daemon
	name: ???
	problem: During development I don't want to manually invoke build commands anymore
	project: system-level daemon that watches source directories and invokes builds automagically
	notes:
		- Error reporting through 'tail -f /var/log/<name>'
		- Need to worry about different types of build systems

http://open.gl has a nice-at-first-glance tutorial

Stale dependency detector
	name: ???
	problem: '#include' directives that aren't needed make c/c++ projects take longer to compile and introduce unnecessary dependencies.
	project: identify #include directives that aren't required for successful compilation.
	notes:
		- Naive sol'n: try to compile without a given #include

add soundcloud link to mpd

Poor man's continuation library for c++

gitfs
	- FUSE that uses git as the backing store

portable stack trace library
	name: libstacktrace
	problem: I want legit and consistent stack traces from c/c++ apps regardless of platform or compiler
	project: Write core data structures and platform specific handlers
	notes:
		- http://http://oroboro.com/stack-trace-on-crash/
			- sigaction to trap POSIX signals
			- g++: cxxabi to demangle
			- backtrace, backtrace_symbols and backtrace_symbols_fd
			- Windows: StackWalker

